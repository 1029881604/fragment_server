<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.antelope.fg.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="team.antelope.fg.pojo.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic_id" jdbcType="INTEGER" property="topicId" />
    <result column="topic_type" jdbcType="SMALLINT" property="topicType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="user_img" jdbcType="VARCHAR" property="userImg" />
    <result column="is_top" jdbcType="BIT" property="isTop" />
    <result column="is_hot" jdbcType="BIT" property="isHot" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="reply_num" jdbcType="INTEGER" property="replyNum" />
    <result column="is_reply" jdbcType="BIT" property="isReply" />
    <result column="comment_status" jdbcType="SMALLINT" property="commentStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic_id, topic_type, content, user_id, nickname, user_img, is_top, is_hot, like_num, 
    reply_num, is_reply, comment_status, create_time
  </sql>
  <select id="selectByExample" parameterType="team.antelope.fg.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="team.antelope.fg.pojo.CommentExample">
    delete from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="team.antelope.fg.pojo.Comment">
    insert into t_comment (id, topic_id, topic_type, 
      content, user_id, nickname, 
      user_img, is_top, is_hot, like_num, 
      reply_num, is_reply, comment_status, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{topicType,jdbcType=SMALLINT}, 
      #{content,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, 
      #{userImg,jdbcType=VARCHAR}, #{isTop,jdbcType=BIT}, #{isHot,jdbcType=BIT}, #{likeNum,jdbcType=INTEGER}, 
      #{replyNum,jdbcType=INTEGER}, #{isReply,jdbcType=BIT}, #{commentStatus,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="team.antelope.fg.pojo.Comment">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="topicType != null">
        topic_type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="userImg != null">
        user_img,
      </if>
      <if test="isTop != null">
        is_top,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="replyNum != null">
        reply_num,
      </if>
      <if test="isReply != null">
        is_reply,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="topicType != null">
        #{topicType,jdbcType=SMALLINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=BIT},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null">
        #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="isReply != null">
        #{isReply,jdbcType=BIT},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="team.antelope.fg.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.topicType != null">
        topic_type = #{record.topicType,jdbcType=SMALLINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userImg != null">
        user_img = #{record.userImg,jdbcType=VARCHAR},
      </if>
      <if test="record.isTop != null">
        is_top = #{record.isTop,jdbcType=BIT},
      </if>
      <if test="record.isHot != null">
        is_hot = #{record.isHot,jdbcType=BIT},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=INTEGER},
      </if>
      <if test="record.replyNum != null">
        reply_num = #{record.replyNum,jdbcType=INTEGER},
      </if>
      <if test="record.isReply != null">
        is_reply = #{record.isReply,jdbcType=BIT},
      </if>
      <if test="record.commentStatus != null">
        comment_status = #{record.commentStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_comment
    set id = #{record.id,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      topic_type = #{record.topicType,jdbcType=SMALLINT},
      content = #{record.content,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      user_img = #{record.userImg,jdbcType=VARCHAR},
      is_top = #{record.isTop,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      reply_num = #{record.replyNum,jdbcType=INTEGER},
      is_reply = #{record.isReply,jdbcType=BIT},
      comment_status = #{record.commentStatus,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="team.antelope.fg.pojo.Comment">
    update t_comment
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="topicType != null">
        topic_type = #{topicType,jdbcType=SMALLINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="isTop != null">
        is_top = #{isTop,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=BIT},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null">
        reply_num = #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="isReply != null">
        is_reply = #{isReply,jdbcType=BIT},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.antelope.fg.pojo.Comment">
    update t_comment
    set topic_id = #{topicId,jdbcType=INTEGER},
      topic_type = #{topicType,jdbcType=SMALLINT},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      user_img = #{userImg,jdbcType=VARCHAR},
      is_top = #{isTop,jdbcType=BIT},
      is_hot = #{isHot,jdbcType=BIT},
      like_num = #{likeNum,jdbcType=INTEGER},
      reply_num = #{replyNum,jdbcType=INTEGER},
      is_reply = #{isReply,jdbcType=BIT},
      comment_status = #{commentStatus,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>